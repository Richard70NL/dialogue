/************************************************************************************************/

use crate::constants::*;
use std::net::IpAddr;
use std::net::Ipv4Addr;

/************************************************************************************************/

#[derive(Debug)]
pub struct Server {
    address: IpAddr,
    port: u16,
    database_url: String,
}

/************************************************************************************************/

impl Server {
    /*------------------------------------------------------------------------------------------*/

    pub fn new() -> Server {
        Server {
            address: IpAddr::V4(Ipv4Addr::new(0, 0, 0, 0)),
            port: 119,
            database_url: DEFAULT_DATA_BASE_URL.to_string(),
        }
    }

    /*------------------------------------------------------------------------------------------*/

    pub fn set_binding_address(&mut self, address: IpAddr) {
        self.address = address;
    }

    /*------------------------------------------------------------------------------------------*/

    pub fn set_binding_port(&mut self, port: u16) {
        self.port = port;
    }

    /*------------------------------------------------------------------------------------------*/

    pub fn set_database_url(&mut self, dburl: String) {
        self.database_url = dburl
    }

    /*------------------------------------------------------------------------------------------*/

    pub fn start(&self) {
        dbg!(self);

        unimplemented!();
    }

    /*------------------------------------------------------------------------------------------*/
}

/************************************************************************************************/
